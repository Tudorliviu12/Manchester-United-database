-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-12-29 00:13:42 EET
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE competitions (
    competition_id NUMBER(3)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 100 NOCACHE ORDER )
    NOT NULL,
    name           VARCHAR2(30) NOT NULL,
    season         VARCHAR2(9) NOT NULL
)
LOGGING;

ALTER TABLE competitions
    ADD CONSTRAINT competitions_name_ck CHECK ( name IN ( 'Carabao Cup', 'Champions League', 'Community Shield', 'Conference League',
    'Europa League',
                                                          'FA Cup', 'Premier League', 'friendly' ) );

ALTER TABLE competitions
    ADD CONSTRAINT competitions_season_ck CHECK ( REGEXP_LIKE ( season,
                                                                '^[0-9]{4}-[0-9]{4}$' ) );

ALTER TABLE competitions ADD CONSTRAINT competitions_pk PRIMARY KEY ( competition_id );

ALTER TABLE competitions ADD CONSTRAINT competitions_name_un UNIQUE ( name );

CREATE TABLE facilities (
    facility_id   NUMBER(3)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 100 NOCACHE ORDER )
    NOT NULL,
    facility_type VARCHAR2(25) NOT NULL,
    facility_name VARCHAR2(60) NOT NULL,
    location      VARCHAR2(120) NOT NULL,
    capacity      NUMBER(7) NOT NULL
)
LOGGING;

ALTER TABLE facilities
    ADD CONSTRAINT facilities_type_ck CHECK ( facility_type IN ( 'amical_ground', 'away_stadium', 'stadium', 'training_ground' ) );

ALTER TABLE facilities
    ADD CONSTRAINT facility_name_ck CHECK ( REGEXP_LIKE ( facility_name,
                                                          '^[A-Za-z ]+$' ) );

ALTER TABLE facilities
    ADD CONSTRAINT facility_location_ck CHECK ( REGEXP_LIKE ( location,
                                                              '^[A-Za-z0-9 ]+$' ) );

ALTER TABLE facilities ADD CONSTRAINT facilities_capacity_ck CHECK ( capacity > 0 );

ALTER TABLE facilities ADD CONSTRAINT facilities_pk PRIMARY KEY ( facility_id );

ALTER TABLE facilities ADD CONSTRAINT facilities_location_un UNIQUE ( location );

CREATE TABLE fans (
    fan_id          NUMBER(8)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 100 NOCACHE ORDER )
    NOT NULL,
    fan_name        VARCHAR2(30) NOT NULL,
    email           VARCHAR2(50) NOT NULL,
    phone_number    VARCHAR2(15),
    membership_type VARCHAR2(15) NOT NULL
)
LOGGING;

ALTER TABLE fans
    ADD CONSTRAINT fans_name_ck CHECK ( REGEXP_LIKE ( fan_name,
                                                      '^[A-Za-z ]+$' ) );

ALTER TABLE fans
    ADD CONSTRAINT fans_email_ck CHECK ( REGEXP_LIKE ( email,
                                                       '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}' ) );

ALTER TABLE fans
    ADD CONSTRAINT fans_phone_number_ck CHECK ( REGEXP_LIKE ( phone_number,
                                                              '^\+?[0-9\s()\-]{10,15}$' ) );

ALTER TABLE fans
    ADD CONSTRAINT fans_membership_type_ck CHECK ( membership_type IN ( 'member', 'non-member' ) );

ALTER TABLE fans ADD CONSTRAINT fans_pk PRIMARY KEY ( fan_id );

ALTER TABLE fans ADD CONSTRAINT fans_email_un UNIQUE ( email );

ALTER TABLE fans ADD CONSTRAINT fans_phone_number_un UNIQUE ( phone_number );

CREATE TABLE kit (
    kit_id       NUMBER(3)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 100 NOCACHE ORDER )
    NOT NULL,
    kit_type     VARCHAR2(5) NOT NULL,
    manufacturer VARCHAR2(20) NOT NULL,
    color        VARCHAR2(15) NOT NULL
)
LOGGING;

ALTER TABLE kit
    ADD CONSTRAINT kit_type_ck CHECK ( kit_type IN ( 'away', 'home', 'third' ) );

ALTER TABLE kit
    ADD CONSTRAINT kit_manufacturer_ck CHECK ( REGEXP_LIKE ( manufacturer,
                                                             '^[A-Za-z ]+$' ) );

ALTER TABLE kit
    ADD CONSTRAINT kit_color_ck CHECK ( REGEXP_LIKE ( color,
                                                      '^[A-Za-z ]+$' ) );

ALTER TABLE kit ADD CONSTRAINT kit_pk PRIMARY KEY ( kit_id );

CREATE TABLE match_statistics (
    player_id      NUMBER(3) NOT NULL,
    match_id       NUMBER(8) NOT NULL,
    minutes_played NUMBER(3) NOT NULL,
    goals_scored   NUMBER(2) NOT NULL,
    assists        NUMBER(2) NOT NULL,
    yellow_cards   NUMBER(1),
    red_cards      NUMBER(1),
    rating         NUMBER(4, 2) NOT NULL
)
LOGGING;

ALTER TABLE match_statistics ADD CONSTRAINT match_statistics_pk PRIMARY KEY ( player_id,
                                                                              match_id );

CREATE TABLE matches (
    match_id       NUMBER(8)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 100 NOCACHE ORDER )
    NOT NULL,
    competition_id NUMBER(3) NOT NULL,
    kit_id         NUMBER(3) NOT NULL,
    facility_id    NUMBER(3) NOT NULL,
    opponent       VARCHAR2(30) NOT NULL,
    "date"         DATE NOT NULL,
    score          VARCHAR2(5) NOT NULL
)
LOGGING;

ALTER TABLE matches
    ADD CONSTRAINT matches_opponent_ck CHECK ( REGEXP_LIKE ( opponent,
                                                             '^[A-Za-z ]+$' ) );

ALTER TABLE matches
    ADD CONSTRAINT matches_score_ck CHECK ( REGEXP_LIKE ( score,
                                                          '^[0-9]{1,2}-[0-9]{1,2}$' ) );

ALTER TABLE matches ADD CONSTRAINT matches_pk PRIMARY KEY ( match_id );

CREATE TABLE players (
    player_id NUMBER(3)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 100 NOCACHE ORDER )
    NOT NULL,
    name      VARCHAR2(50) NOT NULL
)
LOGGING;

ALTER TABLE players
    ADD CONSTRAINT players_name_ck CHECK ( REGEXP_LIKE ( name,
                                                         '^[A-Za-z ]+$' ) );

ALTER TABLE players ADD CONSTRAINT players_pk PRIMARY KEY ( player_id );

CREATE TABLE players_details (
    player_id    NUMBER(3) NOT NULL,
    nationality  VARCHAR2(30) NOT NULL,
    position     VARCHAR2(3) NOT NULL,
    birth_date   DATE NOT NULL,
    salary       NUMBER(9, 2) NOT NULL,
    contract_end DATE NOT NULL,
    kit_number   NUMBER(2) NOT NULL
)
LOGGING;

ALTER TABLE players_details
    ADD CONSTRAINT players_nationality_ck CHECK ( REGEXP_LIKE ( nationality,
                                                                '^[A-Z][a-z]+( [A-Z][a-z]+)*$' ) );

ALTER TABLE players_details
    ADD CONSTRAINT players_position_ck CHECK ( position IN ( 'CAM', 'CB', 'CDM', 'CF', 'CM',
                                                             'GK', 'LB', 'LM', 'LW', 'RB',
                                                             'RM', 'RW', 'ST' ) );

ALTER TABLE players_details
    ADD CONSTRAINT players_kit_number_ck CHECK ( kit_number BETWEEN 1 AND 99 );

CREATE UNIQUE INDEX players_details__idx ON
    players_details (
        player_id
    ASC )
        LOGGING;

ALTER TABLE players_details ADD CONSTRAINT players_details_kit_number_un UNIQUE ( kit_number );

CREATE TABLE staff (
    staff_id NUMBER(3)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 100 NOCACHE ORDER )
    NOT NULL,
    name     VARCHAR2(50) NOT NULL
)
LOGGING;

ALTER TABLE staff
    ADD CONSTRAINT staff_name_ck CHECK ( REGEXP_LIKE ( name,
                                                       '^[A-Za-z ]+$' ) );

ALTER TABLE staff ADD CONSTRAINT staff_pk PRIMARY KEY ( staff_id );

CREATE TABLE staff_details (
    staff_id     NUMBER(3) NOT NULL,
    nationality  VARCHAR2(30) NOT NULL,
    role         VARCHAR2(30) NOT NULL,
    birth_date   DATE NOT NULL,
    salary       NUMBER(9, 2) NOT NULL,
    contract_end DATE NOT NULL
)
LOGGING;

ALTER TABLE staff_details
    ADD CONSTRAINT staff_nationality_ck CHECK ( REGEXP_LIKE ( nationality,
                                                              '^[A-Za-z ]+$' ) );

ALTER TABLE staff_details
    ADD CONSTRAINT staff_role_ck CHECK ( role IN ( 'asisstant_manager', 'board_member', 'coach', 'director_of_football', 'goalkeeper_coach'
    ,
                                                   'manager', 'owner', 'scout' ) );

CREATE UNIQUE INDEX staff_details__idx ON
    staff_details (
        staff_id
    ASC )
        LOGGING;

CREATE TABLE tickets (
    ticket_id   NUMBER(7)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 100 NOCACHE ORDER )
    NOT NULL,
    match_id    NUMBER(8) NOT NULL,
    section     VARCHAR2(5) NOT NULL,
    "row"       NUMBER(2) NOT NULL,
    seat        NUMBER(3) NOT NULL,
    ticket_type VARCHAR2(15) NOT NULL,
    price       NUMBER(5) NOT NULL,
    fan_id      NUMBER(8) NOT NULL
)
LOGGING;

ALTER TABLE tickets
    ADD CONSTRAINT tickets_section_ck CHECK ( REGEXP_LIKE ( section,
                                                            '^[NSEW][0-9]{4}$' ) );

ALTER TABLE tickets ADD CONSTRAINT tickets_row_ck CHECK ( "row" > 0 );

ALTER TABLE tickets ADD CONSTRAINT tickets_seat_ck CHECK ( seat > 0 );

ALTER TABLE tickets
    ADD CONSTRAINT tickets_ticket_type_ck CHECK ( ticket_type IN ( 'VIP', 'regular', 'season_membership' ) );

ALTER TABLE tickets ADD CONSTRAINT tickets_price_ck CHECK ( price > 0 );

ALTER TABLE tickets ADD CONSTRAINT tickets_pk PRIMARY KEY ( ticket_id );

ALTER TABLE tickets
    ADD CONSTRAINT tickets_section_row_seat_un UNIQUE ( section,
                                                        "row",
                                                        seat );

ALTER TABLE match_statistics
    ADD CONSTRAINT match_statistics_matches_fk FOREIGN KEY ( match_id )
        REFERENCES matches ( match_id )
    NOT DEFERRABLE;

ALTER TABLE match_statistics
    ADD CONSTRAINT match_statistics_players_fk FOREIGN KEY ( player_id )
        REFERENCES players ( player_id )
    NOT DEFERRABLE;

ALTER TABLE matches
    ADD CONSTRAINT matches_competitions_fk FOREIGN KEY ( competition_id )
        REFERENCES competitions ( competition_id )
    NOT DEFERRABLE;

ALTER TABLE matches
    ADD CONSTRAINT matches_facilities_fk FOREIGN KEY ( facility_id )
        REFERENCES facilities ( facility_id )
    NOT DEFERRABLE;

ALTER TABLE matches
    ADD CONSTRAINT matches_kit_fk FOREIGN KEY ( kit_id )
        REFERENCES kit ( kit_id )
    NOT DEFERRABLE;

ALTER TABLE players_details
    ADD CONSTRAINT players_details_players_fk FOREIGN KEY ( player_id )
        REFERENCES players ( player_id )
    NOT DEFERRABLE;

ALTER TABLE staff_details
    ADD CONSTRAINT staff_details_staff_fk FOREIGN KEY ( staff_id )
        REFERENCES staff ( staff_id )
    NOT DEFERRABLE;

ALTER TABLE tickets
    ADD CONSTRAINT tickets_fans_fk FOREIGN KEY ( fan_id )
        REFERENCES fans ( fan_id )
    NOT DEFERRABLE;

ALTER TABLE tickets
    ADD CONSTRAINT tickets_matches_fk FOREIGN KEY ( match_id )
        REFERENCES matches ( match_id )
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER trg_check_matches_date 
    BEFORE INSERT OR UPDATE ON matches 
    FOR EACH ROW 
BEGIN
  IF (:new."date" < TO_DATE('01-01-1878', 'DD-MM-YYYY')) THEN
    RAISE_APPLICATION_ERROR(-20002,
      'Invalid date: ' || TO_CHAR(:new."date", 'DD.MM.YYYY') || ' - The date must not be before the year 1878, when the club was founded.');
  END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_check_players_birth_date 
    BEFORE INSERT OR UPDATE ON players_details 
    FOR EACH ROW 
BEGIN
  IF (:new.birth_date > ADD_MONTHS(SYSDATE, -15 * 12)) THEN
    RAISE_APPLICATION_ERROR(-20003,
      'Invalid date: ' || TO_CHAR(:new.birth_date, 'DD.MM.YYYY') || ' - The date must be at least 15 years before the current date. The player must be at least 15 years old.');
  END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_check_players_contract_end 
    BEFORE INSERT OR UPDATE ON players_details 
    FOR EACH ROW 
BEGIN
  IF (:new.contract_end < SYSDATE) THEN
    RAISE_APPLICATION_ERROR(-20004,
      'Invalid date: ' || TO_CHAR(:new.contract_end, 'DD.MM.YYYY') || ' - The contract end date cannot be in the past.');
  END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_check_regular_ticket_limit 
    BEFORE INSERT OR UPDATE ON tickets 
    FOR EACH ROW 
DECLARE
    regular_count NUMBER;
    max_regular_tickets CONSTANT NUMBER := 74307;
BEGIN
    IF :NEW.ticket_type = 'regular' THEN
        SELECT COUNT(*)
        INTO regular_count
        FROM tickets
        WHERE match_id = :NEW.match_id
          AND ticket_type = 'regular';
        IF regular_count >= max_regular_tickets THEN
            RAISE_APPLICATION_ERROR(-20007, 'There are no more tickets available for this match.');
        END IF;
    END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_check_staff_birth_date 
    BEFORE INSERT OR UPDATE ON staff_details 
    FOR EACH ROW 
BEGIN
  IF (:new.birth_date > ADD_MONTHS(SYSDATE, -18 * 12)) THEN
    RAISE_APPLICATION_ERROR(-20001,
      'Invalid date: ' || TO_CHAR(:new.birth_date, 'DD.MM.YYYY') || ' - The date must be at least 18 years before the current date. The staff member must be at least 18 years old.');
  END IF;
END; 
/

CREATE OR REPLACE TRIGGER "trg_check_staff_contract_end " 
    BEFORE INSERT OR UPDATE ON staff_details 
    FOR EACH ROW 
BEGIN
  IF (:new.contract_end < SYSDATE) THEN
    RAISE_APPLICATION_ERROR(-20005,
      'Invalid date: ' || TO_CHAR(:new.contract_end, 'DD.MM.YYYY') || ' - The contract end date cannot be in the past.');
  END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_check_vip_ticket_limit 
    BEFORE INSERT OR UPDATE ON tickets 
    FOR EACH ROW 
DECLARE
    vip_count NUMBER;
    max_vip_tickets CONSTANT NUMBER := 3;
BEGIN
    IF :NEW.ticket_type = 'VIP' THEN
        SELECT COUNT(*)
        INTO vip_count
        FROM tickets
        WHERE match_id = :NEW.match_id
          AND ticket_type = 'VIP';
        IF vip_count >= max_vip_tickets THEN
            RAISE_APPLICATION_ERROR(-20006, 'There are no more VIP tickets available for this match.');
        END IF;
    END IF;
END; 
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             2
-- ALTER TABLE                             51
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           7
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
